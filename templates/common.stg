group common;

FILTER(list,field,map) ::= <<
<list:CALL(map=map,key={<it.(field)>},item=it)>
>>

CALL(map,key,item) ::= <<
<((map)(key))(item)>
>>

Replace(s) ::= <<
<(s); format="Replace">
>>

Lower(s) ::= <<
<(s); format="Lower">
>>

Upper(s) ::= <<
<(s); format="Upper">
>>

UpperFirst(s) ::= <<
<(s); format="UpperFirst">
>>

LowerFirst(s) ::= <<
<(s); format="LowerFirst">
>>

setOutput(name) ::= <%
<"start"; format="OutputFile"><name><"end"; format="OutputFile">
%>

resetOutput() ::= <%
<"reset"; format="OutputFile">
%>

EscapeSourceIdents(s) ::= <%
<(s); format="EscapeSourceIdents">
%>

Debug(s) ::= <<
<(s); format="Debug">
>>

GlueTokens(s) ::= <<
<s.tokens: {t | <t; format="Lower UpperFirst">}>
>>

EntityName(e) ::= <<
<if (e.sourceName)><e.sourceName><else><(GlueTokens(e.name)); format="EscapeSourceIdents"><endif>
>>

EntityMetaObjectName(e) ::= "<if (e.sourceMetaName)><e.sourceMetaName><else><EntityName(e)>Meta<endif>"

EntityRefName(e) ::= "<EntityRefPackageName(e)>.<EntityName(e)>"

EntityMetaObjectRefName(e) ::= "<EntityMetaRefPackageName(e)>.<EntityMetaObjectName(e)>"

FieldName(f) ::= <<
<if (f.sourceName)><f.sourceName><else><(GlueTokens(f.name)); format="LowerFirst EscapeSourceIdents"><endif>
>>

RawFieldName(f) ::= "raw_<FieldName(f)>"

FieldStateName(f) ::= "state_<FieldName(f)>"

EntityGenPackageName(e) ::= <<
<PackageName(e, false)>
>>

EntityRefPackageName(e) ::= <<
<PackageName(e, e.customized)>
>>

EntityMetaRefPackageName(e) ::= <<
<PackageName(e, e.customizedMeta)>
>>

PackageName(e, customized) ::= <<
<e.module; format="Lower EscapeSourceIdents"><if (!customized)>.gen<endif><e.packagge.tokens: {t|.<t; format="Lower EscapeSourceIdents">}>
>>
